name: Deploy PlayKe Backend Live Service

on:
    workflow_dispatch:
    push:
        branches:
            - master

concurrency:
    group: '${{ github.workflow }}-${{ github.head_ref || github.ref }}'
    cancel-in-progress: true

jobs:
    build:
        name: Build and deploy
        runs-on: ubuntu-22.04
        
        steps:
            - name: Check out code
              uses: actions/checkout@v4
            
            - name: Declare docker tag variable
              id: vars
              shell: bash
              run: |
                  GIT_HASH=$(git rev-parse --short "${GITHUB_SHA}")
                  echo "docker_tag=$(echo ${GITHUB_REF##*/}-${GIT_HASH})" >> $GITHUB_ENV
            
            - name: Set up QEMU
              uses: docker/setup-qemu-action@v3
            
            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v3
            
            - name: Login to Docker Hub
              uses: docker/login-action@v2
              with:
                  username: ${{ secrets.DOCKERHUB_USERNAME }}
                  password: ${{ secrets.DOCKERHUB_TOKEN }}
            
            - name: Build and push multi-platform image
              id: build
              uses: docker/build-push-action@v4
              with:
                  context: .
                  file: ./Dockerfile
                  push: true
                  tags: osiru/play-ke-content:${{ env.docker_tag }}
                  platforms: linux/amd64,linux/arm64/v8
            
            - name: Run deployment commands
              uses: appleboy/ssh-action@v1.0.0
              with:
                  host: ${{ secrets.MVPM_SERVER_IP }}
                  username: ${{ secrets.MVPM_SSH_USER }}
                  port: 22
                  key: ${{ secrets.MVPM_PASSWORD_SSH_KEY }}
                  script_stop: true
                  script: |
                      cd /srv/apps/live/play-ke-gateway
                      git stash
                      git pull origin master
                      
                      LATEST_TAG=${{ env.docker_tag }}
                      echo "Updating .env file with BACKEND_TAG=${LATEST_TAG}"
                      echo "BACKEND_TAG=${LATEST_TAG}" >> .env
                      if [ $? -ne 0 ]; then
                        echo "Error updating .env file."
                        exit 1
                      fi
                      if [[ -z "$LATEST_TAG" ]]; then
                        echo "Error: LATEST_TAG is empty."
                        exit 1
                      fi
                      echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin
                      docker-compose pull
                      docker-compose up -d --build
            
            - name: Restart Docker Service
              run: sudo systemctl restart docker
